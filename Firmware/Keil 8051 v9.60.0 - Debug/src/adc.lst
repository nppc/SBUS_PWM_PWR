C51 COMPILER V9.60.0.0   ADC                                                               11/04/2023 11:36:01 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\src\adc.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5_3\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\src\Tennp\G
                    -it\SBUS_PWM_PWR\Firmware\src\adc.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPE
                    -ED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/SiliconLabs/SimplicityStudio/v5_3/developer/sdks/8051/v4.2.3/
                    -/Device/EFM8BB51/inc;C:/SiliconLabs/SimplicityStudio/v5_3/developer/sdks/8051/v4.2.3//Device/shared/si8051Base) PRINT(.\
                    -src\adc.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\adc.OBJ)

line level    source

   1          #include "main.h"
   2          #include "adc.h"
   3          
   4          // (36/289) - VDD_DIV divider from datasheet
   5          // ADC_V_CONST = VREF / 4095 / (36/289)
   6          // ADC_V_CONST = 1200 / 4095 / (36/289)
   7          #define ADC_V_CONST 2.352462352
   8          
   9          // Calculate 12 bit ADC value for given Voltage (1.2V VREF)
  10          // ADC = Voltage * (36/289) * 4095 / 1.2
  11          
  12          
  13          // returns voltage in mV
  14          // if 0 then there is no new voltage reading ready
  15          uint16_t readVoltage(void){
  16   1        uint16_t lastVoltage = 0;
  17   1        // new conversion started in TIMER3 interrupt every 16ms
  18   1        if(ADC0CN0_ADINT){
  19   2            uint16_t adcval = ADC0;
  20   2            ADC0CN0_ADINT = false;
  21   2            // convert ADC to Voltage (mv)
  22   2            // Voltage = ADC * const
  23   2            lastVoltage = (uint16_t)((float)adcval * ADC_V_CONST);
  24   2        }
  25   1        return lastVoltage;
  26   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     36    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
